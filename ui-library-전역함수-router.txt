//ui-library-전역함수-router

$router
- NOVA 애플리케이션 개발 시 사용할 수 있는 $router 전역 객체 입니다.
- 전역 공통이기 때문에 따로 import 하지 않고 바로 사용 합니다.

* $router.push()
	- Route주소(path) 를 이용하여 각각 맞는 콘텐츠로 이동 시켜주는 메서드 입니다.
	- $router.push() 메서드의 type
	IRouter.push( path: string, options?: object | undefinied) : void
	
	- 사용법
		- 첫번째 인자로 각 업무마다 등록한 라우터 정보를 입력합니다.
			// [업무] / [업무라우터path] / [화면라우터path] 조합
			$router.push('/cm/example/main');

		- 두번째 인자는 react-router의 NavigateOptions 명세서를 따릅니다.
			참조 : https://api.reactrouter.com/v7/interface/react_router.NavigateOptions.html
			ingterface NavigateOptions {
				flushSync ? : boolean;
				preventScrollReset ? : boolean;
				relative? : RelativeRoutingType;
				replace? : boolean;
				state? : any;
				viewTransition? : boolean;
			} 
			
	- 사용예제코드
		interface ISamplePageProps {
		}
		
		const SamplePage : IComponent<ISamplePageProps> = (): JSX.Element => {
			//버튼 클릭시 다른 화면으로 이동하는 이벤트 함수
			const goPageHandler = () => {
				// 라우터 path만 사용예제
				$router.push('/cm/example/main');
			};
			// 버튼 클리시 다른 화면으로 이동하는 이벤트 함수
			const goPageOptionHandler = () => {
				//  옵션사용예제
				$router.push('/cm/example/main', { replace : true });
			};
			
			return (
				<button onClick = {goPageHandler} >  화면이동  </button>
				<button onClick = {goPageOptionHandler} >  화면이동 (라우터옵션포함)  </button>
			);			
		};
		
		SamplePage.displayName = 'SamplePage';
		export default SamplePage;
		
* $router.goBack()
	- 이전화면으로 이동할때는 goBack() 메서드를 사용한다
		$router.goBack();
		
* $router.getLocation()
	- 현재 화면 Location 정보 가져오기
		$router.getLocation();
		// {pathname: '/',  search: '' , hash: '' , state : null, key: 'default' }

* $router.openExternal()
	- 현재 브라우저에서 새 브라우저 창으로 띄워서 화면을 열고 싶을때 사용합니다.
	- 첫번째 인자로 각 업무마다 등록한 라우터 정보를 입력합니다.
		// [업무] / [업무라우터path] / [화면라우터path] 조합
		$router.openExternal('/cm/example/main');
	- 두번째 인자는 window.open() 함수의 옵션값을 입력합니다.
		window.open 공식문서 참조: https://developer.mozilla.org/en-US/docs/Web/API/Window/open
		$router.openExternal('/cm/example/main' , [옵션]);




